name: PR Pre-review

on:
  pull_request:
    branches:
      - master

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SKIP_REST: false

jobs:
  pre-review:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
            ref: ${{ github.head_ref }}
            fetch-depth: 0 

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Fetch master branch
        run: git fetch origin master

      - name: Collect information
        run: |
            # Environment variables used with "preReview.js"
            echo "Setting environment variable for \"preReview.js\""
            setEnv() {
                echo "$1=${!1}" >> $GITHUB_ENV
            }
            
            MERGE_BASE=$(git merge-base origin/master HEAD 2>/dev/null || echo HEAD~1)
            GITHUB_HANDLE=${GITHUB_TRIGGERING_ACTOR:-local-actor}; setEnv "GITHUB_HANDLE"
            CHANGED_FILES=$(git diff --name-only $MERGE_BASE HEAD | tr '\n' ' '); setEnv "CHANGED_FILES";
            GITHUB_PERMISSION_ROLE=$(gh api "repos/$GITHUB_REPOSITORY/collaborators/$GITHUB_HANDLE/permission" -q '.role_name' 2>/dev/null || echo 'unknown');
            setEnv "GITHUB_PERMISSION_ROLE"

      - name: Run "preReview" script
        id: pre-review
        run: |
            PR_NUMBER=${{ github.event.pull_request.number }};
            REVIEW_MESSAGE=$(node ./generators/preReview.js "$GITHUB_HANDLE" "$CHANGED_FILES" "$GITHUB_PERMISSION_ROLE");
            echo "REVIEW_MESSAGE<<EOF" >> $GITHUB_ENV
            echo "$REVIEW_MESSAGE" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
            
            # Show in logs
            echo "===== REVIEW_MESSAGE ====="
            echo "$REVIEW_MESSAGE"
            echo "=========================="

            # Submit review
            echo "Submit review comment"
            gh pr comment "$PR_NUMBER" --body "$REVIEW_MESSAGE"

            # Add label
            echo "Submit review comment"
            if echo "$REVIEW_MESSAGE" | grep -q '\- \[ \]'; then
              gh pr edit "$PR_NUMBER" --add-assignee "$GITHUB_HANDLE"
              gh pr edit "$PR_NUMBER" --add-label "Changes Requested"
            else
              gh pr edit "$PR_NUMBER" --remove-label "Changes Requested"
            fi
            if echo "$REVIEW_MESSAGE" | grep -q -Eqi 'missing|invalid'; then
                gh pr edit "$PR_NUMBER" --add-label "Invalid"
            else
              gh pr edit "$PR_NUMBER" --remove-label "Invalid"
            fi

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  maintainer-review:
      needs: pre-review
      if: github.event_name == 'pull_request_review'
      runs-on: ubuntu-latest

      steps:

        - name: Show previous review message
          run: |
            echo "Message from pre-review job:"
            echo "${{ needs.pre-review.outputs.review_message }}"
      
        - name: Add labels depending on maintainer review
          run: |
            PR_NUMBER=${{ github.event.pull_request.number }}
            REVIEW_STATE=${{ github.event.review.state }}
            CURRENT_MONTH=$(date +%m)

            if [[ "$REVIEW_STATE" == "changes_requested" ]]; then
              gh pr edit "$PR_NUMBER" --add-label "Changes Requested"
              echo "Maintainer requested changes — label added."
            elif [[ "$REVIEW_STATE" == "approved" ]]; then
              gh pr edit "$PR_NUMBER" --add-label "Approved"
              echo "Maintainer approved — label added."
            fi

            # Add Hacktoberfest label only if current month is October (10)
            if [[ "$CURRENT_MONTH" == "10" ]]; then
              gh pr edit "$PR_NUMBER" --add-label "hacktoberfest-accepted"
            fi
            